# This is a basic workflow to help you get started with Actions

name: Main

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: development

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.4.2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.develop
          push: ${{ github.event_name != 'pull_request' }}
          tags: fxanhkhoa/what-to-eat-api:latest
          secrets: |
            PORT=${{ vars.PORT }}
            MONGODB_CONNECTION_STRING=${{ secrets.MONGODB_CONNECTION_STRING }}
            DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            JWT_EXPIRED_REFRESH=${{ secrets.JWT_EXPIRED_REFRESH }}
            JWT_EXPIRED=${{ secrets.JWT_EXPIRED }}
            TYPE=${{ secrets.TYPE }}
            PROJECT_ID=${{ secrets.PROJECT_ID }}
            PRIVATE_KEY_ID=${{ secrets.PRIVATE_KEY_ID }}
            PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}
            CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }}
            CLIENT_ID=${{ secrets.CLIENT_ID }}
            AUTH_URI=${{ secrets.AUTH_URI }}
            TOKEN_URI=${{ secrets.TOKEN_URI }}
            AUTH_PROVIDER_X509_CERT_URL=${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}
            CLIENT_X509_CERT_URL=${{ secrets.CLIENT_X509_CERT_URL }}
            UNIVERSE_DOMAIN=${{ secrets.UNIVERSE_DOMAIN }}

  deploy:
    environment: development
    needs: [build]
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
        - name: executing remote ssh commands using password
          if: github.event_name != 'pull_request'
          uses: appleboy/ssh-action@v0.1.9
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            password: ${{ secrets.PASSWORD }}
            port: ${{ secrets.PORT }}
            script: sh deploy-dratini.sh ${{ secrets.DRATINI_HOST }} ${{ secrets.DRATINI_PASSWORD }} 'sh what-to-eat/deploy.sh what-to-eat-api'
package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
	"log"
	"what-to-eat/be/graph/model"
	"what-to-eat/be/graph/service"
)

// LoginWithGoogle is the resolver for the loginWithGoogle field.
func (r *mutationResolver) LoginWithGoogle(ctx context.Context, loginInput model.LoginInput) (*model.TokenResult, error) {
	data, err := service.NewAuthService().Login(loginInput.Token)
	if err != nil {
		log.Printf("Login Error: %s", err.Error())
	}
	return data, nil
}

// RetrieveToken is the resolver for the retrieveToken field.
func (r *mutationResolver) RetrieveToken(ctx context.Context, retrieveTokenInput model.RetrieveTokenInput) (*model.TokenResult, error) {
	token, err := service.NewAuthService().GenerateToken(retrieveTokenInput.RefreshToken)
	result := model.TokenResult{
		Token:        token,
		RefreshToken: retrieveTokenInput.RefreshToken,
	}
	return &result, err
}

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *mutationResolver) Login(ctx context.Context, loginInput model.LoginInput) (*model.TokenResult, error) {
	panic(fmt.Errorf("not implemented: Login - login"))
}

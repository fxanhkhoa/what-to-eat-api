// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
	"time"
)

type CreateDishInput struct {
	Slug                 string                    `json:"slug" bson:"slug"`
	Title                []*MultiLanguageInputD    `json:"title" bson:"title"`
	ShortDescription     []*MultiLanguageInputD    `json:"shortDescription" bson:"shortDescription"`
	Content              []*MultiLanguageInputD    `json:"content" bson:"content"`
	Tags                 []*string                 `json:"tags" bson:"tags"`
	PreparationTime      *float64                  `json:"preparationTime,omitempty" bson:"preparationTime"`
	CookingTime          *float64                  `json:"cookingTime,omitempty" bson:"cookingTime"`
	DifficultLevel       *string                   `json:"difficultLevel,omitempty" bson:"difficultLevel"`
	MealCategories       []*string                 `json:"mealCategories" bson:"mealCategories"`
	IngredientCategories []*string                 `json:"ingredientCategories" bson:"ingredientCategories"`
	Thumbnail            *string                   `json:"thumbnail,omitempty" bson:"thumbnail"`
	Videos               []*string                 `json:"videos" bson:"videos"`
	Ingredients          []*IngredientsInDishInput `json:"ingredients" bson:"ingredients"`
	RelatedDishes        []*string                 `json:"relatedDishes" bson:"relatedDishes"`
}

type CreateDishVoteInput struct {
	Title         *string              `json:"title,omitempty" bson:"title"`
	Description   *string              `json:"description,omitempty" bson:"description"`
	DishVoteItems []*DishVoteItemInput `json:"dishVoteItems" bson:"dishVoteItems"`
}

type CreateIngredientInput struct {
	Slug               string                `json:"slug" bson:"slug"`
	Title              []*MultiLanguageInput `json:"title" bson:"title"`
	Measure            *string               `json:"measure,omitempty" bson:"measure"`
	Calories           *int                  `json:"calories,omitempty" bson:"calories"`
	Carbohydrate       *int                  `json:"carbohydrate,omitempty" bson:"carbohydrate"`
	Fat                *int                  `json:"fat,omitempty" bson:"fat"`
	IngredientCategory []*string             `json:"ingredientCategory" bson:"ingredientCategory"`
	Weight             *int                  `json:"weight,omitempty" bson:"weight"`
	Protein            *int                  `json:"protein,omitempty" bson:"protein"`
	Cholesterol        *int                  `json:"cholesterol,omitempty" bson:"cholesterol"`
	Sodium             *int                  `json:"sodium,omitempty" bson:"sodium"`
	Images             []*string             `json:"images" bson:"images"`
}

type CreateRolePermissionInput struct {
	Name        string    `json:"name" bson:"name"`
	Permission  []*string `json:"permission,omitempty" bson:"permission"`
	Description *string   `json:"description,omitempty" bson:"description"`
}

type CreateUserInput struct {
	Email       string     `json:"email" bson:"email"`
	Password    *string    `json:"password,omitempty" bson:"password"`
	Name        *string    `json:"name,omitempty" bson:"name"`
	DateOfBirth *time.Time `json:"dateOfBirth,omitempty" bson:"dateOfBirth"`
	Address     *string    `json:"address,omitempty" bson:"address"`
	Phone       *string    `json:"phone,omitempty" bson:"phone"`
	GoogleID    *string    `json:"googleID,omitempty" bson:"googleID"`
	FacebookID  *string    `json:"facebookID,omitempty" bson:"facebookID"`
	GithubID    *string    `json:"githubID,omitempty" bson:"githubID"`
	Avatar      *string    `json:"avatar,omitempty" bson:"avatar"`
}

type Dish struct {
	Slug                 string               `json:"slug" bson:"slug"`
	Title                []*MultiLanguageD    `json:"title" bson:"title"`
	ShortDescription     []*MultiLanguageD    `json:"shortDescription" bson:"shortDescription"`
	Content              []*MultiLanguageD    `json:"content" bson:"content"`
	Tags                 []*string            `json:"tags" bson:"tags"`
	PreparationTime      *float64             `json:"preparationTime,omitempty" bson:"preparationTime"`
	CookingTime          *float64             `json:"cookingTime,omitempty" bson:"cookingTime"`
	DifficultLevel       *string              `json:"difficultLevel,omitempty" bson:"difficultLevel"`
	MealCategories       []*string            `json:"mealCategories" bson:"mealCategories"`
	IngredientCategories []*string            `json:"ingredientCategories" bson:"ingredientCategories"`
	Thumbnail            *string              `json:"thumbnail,omitempty" bson:"thumbnail"`
	Videos               []*string            `json:"videos" bson:"videos"`
	Ingredients          []*IngredientsInDish `json:"ingredients" bson:"ingredients"`
	RelatedDishes        []*string            `json:"relatedDishes" bson:"relatedDishes"`
	Deleted              bool                 `json:"deleted" bson:"deleted"`
	DeletedAt            *time.Time           `json:"deletedAt,omitempty" bson:"deletedAt"`
	DeletedBy            *string              `json:"deletedBy,omitempty" bson:"deletedBy"`
	UpdatedAt            *time.Time           `json:"updatedAt,omitempty" bson:"updatedAt"`
	UpdatedBy            *string              `json:"updatedBy,omitempty" bson:"updatedBy"`
	CreatedAt            *time.Time           `json:"createdAt,omitempty" bson:"createdAt"`
	CreatedBy            *string              `json:"createdBy,omitempty" bson:"createdBy"`
	ID                   string               `json:"_id" bson:"_id,omitempty"`
}

type DishVote struct {
	Title         *string         `json:"title,omitempty" bson:"title"`
	Description   *string         `json:"description,omitempty" bson:"description"`
	DishVoteItems []*DishVoteItem `json:"dishVoteItems" bson:"dishVoteItems"`
	Deleted       bool            `json:"deleted" bson:"deleted"`
	DeletedAt     *time.Time      `json:"deletedAt,omitempty" bson:"deletedAt"`
	DeletedBy     *string         `json:"deletedBy,omitempty" bson:"deletedBy"`
	UpdatedAt     *time.Time      `json:"updatedAt,omitempty" bson:"updatedAt"`
	UpdatedBy     *string         `json:"updatedBy,omitempty" bson:"updatedBy"`
	CreatedAt     *time.Time      `json:"createdAt,omitempty" bson:"createdAt"`
	CreatedBy     *string         `json:"createdBy,omitempty" bson:"createdBy"`
	ID            string          `json:"_id" bson:"_id,omitempty"`
}

type DishVoteInsertOneResult struct {
	InsertedID *string `json:"InsertedID,omitempty" bson:"InsertedID"`
}

type DishVoteItem struct {
	Slug          string    `json:"slug" bson:"slug"`
	VoteUser      []*string `json:"voteUser" bson:"voteUser"`
	VoteAnonymous []*string `json:"voteAnonymous" bson:"voteAnonymous"`
	IsCustom      bool      `json:"isCustom" bson:"isCustom"`
}

type DishVoteItemInput struct {
	Slug          string    `json:"slug" bson:"slug"`
	VoteUser      []*string `json:"voteUser" bson:"voteUser"`
	VoteAnonymous []*string `json:"voteAnonymous" bson:"voteAnonymous"`
	IsCustom      bool      `json:"isCustom" bson:"isCustom"`
}

type Ingredient struct {
	Slug               string           `json:"slug" bson:"slug"`
	Title              []*MultiLanguage `json:"title" bson:"title"`
	Measure            *string          `json:"measure,omitempty" bson:"measure"`
	Calories           *int             `json:"calories,omitempty" bson:"calories"`
	Carbohydrate       *int             `json:"carbohydrate,omitempty" bson:"carbohydrate"`
	Fat                *int             `json:"fat,omitempty" bson:"fat"`
	IngredientCategory []*string        `json:"ingredientCategory" bson:"ingredientCategory"`
	Weight             *int             `json:"weight,omitempty" bson:"weight"`
	Protein            *int             `json:"protein,omitempty" bson:"protein"`
	Cholesterol        *int             `json:"cholesterol,omitempty" bson:"cholesterol"`
	Sodium             *int             `json:"sodium,omitempty" bson:"sodium"`
	Images             []*string        `json:"images" bson:"images"`
	Deleted            bool             `json:"deleted" bson:"deleted"`
	DeletedAt          *time.Time       `json:"deletedAt,omitempty" bson:"deletedAt"`
	DeletedBy          *string          `json:"deletedBy,omitempty" bson:"deletedBy"`
	UpdatedAt          *time.Time       `json:"updatedAt,omitempty" bson:"updatedAt"`
	UpdatedBy          *string          `json:"updatedBy,omitempty" bson:"updatedBy"`
	CreatedAt          *time.Time       `json:"createdAt,omitempty" bson:"createdAt"`
	CreatedBy          *string          `json:"createdBy,omitempty" bson:"createdBy"`
	ID                 string           `json:"_id" bson:"_id,omitempty"`
}

type IngredientsInDish struct {
	Quantity float64 `json:"quantity" bson:"quantity"`
	Slug     string  `json:"slug" bson:"slug"`
	Note     *string `json:"note,omitempty" bson:"note"`
}

type IngredientsInDishInput struct {
	Quantity float64 `json:"quantity" bson:"quantity"`
	Slug     string  `json:"slug" bson:"slug"`
	Note     *string `json:"note,omitempty" bson:"note"`
}

type LoginInput struct {
	Token string `json:"token" bson:"token"`
}

type MultiLanguage struct {
	Lang string  `json:"lang" bson:"lang"`
	Data *string `json:"data,omitempty" bson:"data"`
}

type MultiLanguageInput struct {
	Lang string  `json:"lang" bson:"lang"`
	Data *string `json:"data,omitempty" bson:"data"`
}

type MultiLanguageInputD struct {
	Lang string  `json:"lang" bson:"lang"`
	Data *string `json:"data,omitempty" bson:"data"`
}

type MultiLanguageD struct {
	Lang string  `json:"lang" bson:"lang"`
	Data *string `json:"data,omitempty" bson:"data"`
}

type Mutation struct {
}

type Query struct {
}

type RetrieveTokenInput struct {
	RefreshToken string `json:"refreshToken" bson:"refreshToken"`
}

type RolePermission struct {
	Name        string     `json:"name" bson:"name"`
	Permission  []*string  `json:"permission,omitempty" bson:"permission"`
	Description *string    `json:"description,omitempty" bson:"description"`
	Deleted     bool       `json:"deleted" bson:"deleted"`
	DeletedAt   *time.Time `json:"deletedAt,omitempty" bson:"deletedAt"`
	DeletedBy   *string    `json:"deletedBy,omitempty" bson:"deletedBy"`
	UpdatedAt   *time.Time `json:"updatedAt,omitempty" bson:"updatedAt"`
	UpdatedBy   *string    `json:"updatedBy,omitempty" bson:"updatedBy"`
	CreatedAt   *time.Time `json:"createdAt,omitempty" bson:"createdAt"`
	CreatedBy   *string    `json:"createdBy,omitempty" bson:"createdBy"`
	ID          string     `json:"_id" bson:"_id,omitempty"`
}

type TokenResult struct {
	Token        string `json:"token" bson:"token"`
	RefreshToken string `json:"refreshToken" bson:"refreshToken"`
}

type UpdateDishInput struct {
	Slug                 string                    `json:"slug" bson:"slug"`
	Title                []*MultiLanguageInputD    `json:"title" bson:"title"`
	ShortDescription     []*MultiLanguageInputD    `json:"shortDescription" bson:"shortDescription"`
	Content              []*MultiLanguageInputD    `json:"content" bson:"content"`
	Tags                 []*string                 `json:"tags" bson:"tags"`
	PreparationTime      *float64                  `json:"preparationTime,omitempty" bson:"preparationTime"`
	CookingTime          *float64                  `json:"cookingTime,omitempty" bson:"cookingTime"`
	DifficultLevel       *string                   `json:"difficultLevel,omitempty" bson:"difficultLevel"`
	MealCategories       []*string                 `json:"mealCategories" bson:"mealCategories"`
	IngredientCategories []*string                 `json:"ingredientCategories" bson:"ingredientCategories"`
	Thumbnail            *string                   `json:"thumbnail,omitempty" bson:"thumbnail"`
	Videos               []*string                 `json:"videos" bson:"videos"`
	Ingredients          []*IngredientsInDishInput `json:"ingredients" bson:"ingredients"`
	RelatedDishes        []*string                 `json:"relatedDishes" bson:"relatedDishes"`
}

type UpdateDishVoteInput struct {
	ID            string               `json:"_id" bson:"_id,omitempty"`
	Title         *string              `json:"title,omitempty" bson:"title"`
	Description   *string              `json:"description,omitempty" bson:"description"`
	DishVoteItems []*DishVoteItemInput `json:"dishVoteItems" bson:"dishVoteItems"`
}

type UpdateIngredientInput struct {
	Slug               string                `json:"slug" bson:"slug"`
	Title              []*MultiLanguageInput `json:"title" bson:"title"`
	Measure            *string               `json:"measure,omitempty" bson:"measure"`
	Calories           *int                  `json:"calories,omitempty" bson:"calories"`
	Carbohydrate       *int                  `json:"carbohydrate,omitempty" bson:"carbohydrate"`
	Fat                *int                  `json:"fat,omitempty" bson:"fat"`
	IngredientCategory []*string             `json:"ingredientCategory" bson:"ingredientCategory"`
	Images             []*string             `json:"images" bson:"images"`
	Weight             *int                  `json:"weight,omitempty" bson:"weight"`
	Protein            *int                  `json:"protein,omitempty" bson:"protein"`
	Cholesterol        *int                  `json:"cholesterol,omitempty" bson:"cholesterol"`
	Sodium             *int                  `json:"sodium,omitempty" bson:"sodium"`
}

type UpdateRolePermissionInput struct {
	ID          string    `json:"id" bson:"id"`
	Name        string    `json:"name" bson:"name"`
	Permission  []*string `json:"permission,omitempty" bson:"permission"`
	Description *string   `json:"description,omitempty" bson:"description"`
}

type UpdateRoleUserInput struct {
	ID       string `json:"id" bson:"id"`
	RoleName string `json:"roleName" bson:"roleName"`
}

type UpdateUserInput struct {
	ID          string     `json:"id" bson:"id"`
	Email       string     `json:"email" bson:"email"`
	Name        *string    `json:"name,omitempty" bson:"name"`
	DateOfBirth *time.Time `json:"dateOfBirth,omitempty" bson:"dateOfBirth"`
	Address     *string    `json:"address,omitempty" bson:"address"`
	Phone       *string    `json:"phone,omitempty" bson:"phone"`
	GoogleID    *string    `json:"googleID,omitempty" bson:"googleID"`
	FacebookID  *string    `json:"facebookID,omitempty" bson:"facebookID"`
	GithubID    *string    `json:"githubID,omitempty" bson:"githubID"`
	Avatar      *string    `json:"avatar,omitempty" bson:"avatar"`
}

type User struct {
	Email       string     `json:"email" bson:"email"`
	Password    *string    `json:"password,omitempty" bson:"password"`
	Name        *string    `json:"name,omitempty" bson:"name"`
	DateOfBirth *time.Time `json:"dateOfBirth,omitempty" bson:"dateOfBirth"`
	Address     *string    `json:"address,omitempty" bson:"address"`
	Phone       *string    `json:"phone,omitempty" bson:"phone"`
	GoogleID    *string    `json:"googleID,omitempty" bson:"googleID"`
	FacebookID  *string    `json:"facebookID,omitempty" bson:"facebookID"`
	GithubID    *string    `json:"githubID,omitempty" bson:"githubID"`
	Avatar      *string    `json:"avatar,omitempty" bson:"avatar"`
	Deleted     bool       `json:"deleted" bson:"deleted"`
	DeletedAt   *time.Time `json:"deletedAt,omitempty" bson:"deletedAt"`
	DeletedBy   *string    `json:"deletedBy,omitempty" bson:"deletedBy"`
	UpdatedAt   *time.Time `json:"updatedAt,omitempty" bson:"updatedAt"`
	UpdatedBy   *string    `json:"updatedBy,omitempty" bson:"updatedBy"`
	CreatedAt   *time.Time `json:"createdAt,omitempty" bson:"createdAt"`
	CreatedBy   *string    `json:"createdBy,omitempty" bson:"createdBy"`
	ID          string     `json:"_id" bson:"_id,omitempty"`
	RoleName    string     `json:"roleName" bson:"roleName"`
}

type Role string

const (
	RoleCreateUser       Role = "CREATE_USER"
	RoleUpdateUser       Role = "UPDATE_USER"
	RoleDeleteUser       Role = "DELETE_USER"
	RoleFindUsers        Role = "FIND_USERS"
	RoleFindUser         Role = "FIND_USER"
	RoleCreateRole       Role = "CREATE_ROLE"
	RoleUpdateRole       Role = "UPDATE_ROLE"
	RoleDeleteRole       Role = "DELETE_ROLE"
	RoleFindRoles        Role = "FIND_ROLES"
	RoleFindRole         Role = "FIND_ROLE"
	RoleCreateIngredient Role = "CREATE_INGREDIENT"
	RoleUpdateIngredient Role = "UPDATE_INGREDIENT"
	RoleDeleteIngredient Role = "DELETE_INGREDIENT"
	RoleFindIngredients  Role = "FIND_INGREDIENTS"
	RoleFindIngredient   Role = "FIND_INGREDIENT"
	RoleCreateDish       Role = "CREATE_DISH"
	RoleUpdateDish       Role = "UPDATE_DISH"
	RoleDeleteDish       Role = "DELETE_DISH"
	RoleFindDishes       Role = "FIND_DISHES"
	RoleFindDish         Role = "FIND_DISH"
	RoleCreateDishVote   Role = "CREATE_DISH_VOTE"
	RoleUpdateDishVote   Role = "UPDATE_DISH_VOTE"
	RoleDeleteDishVote   Role = "DELETE_DISH_VOTE"
	RoleFindDishVotes    Role = "FIND_DISH_VOTES"
	RoleFindDishVote     Role = "FIND_DISH_VOTE"
)

var AllRole = []Role{
	RoleCreateUser,
	RoleUpdateUser,
	RoleDeleteUser,
	RoleFindUsers,
	RoleFindUser,
	RoleCreateRole,
	RoleUpdateRole,
	RoleDeleteRole,
	RoleFindRoles,
	RoleFindRole,
	RoleCreateIngredient,
	RoleUpdateIngredient,
	RoleDeleteIngredient,
	RoleFindIngredients,
	RoleFindIngredient,
	RoleCreateDish,
	RoleUpdateDish,
	RoleDeleteDish,
	RoleFindDishes,
	RoleFindDish,
	RoleCreateDishVote,
	RoleUpdateDishVote,
	RoleDeleteDishVote,
	RoleFindDishVotes,
	RoleFindDishVote,
}

func (e Role) IsValid() bool {
	switch e {
	case RoleCreateUser, RoleUpdateUser, RoleDeleteUser, RoleFindUsers, RoleFindUser, RoleCreateRole, RoleUpdateRole, RoleDeleteRole, RoleFindRoles, RoleFindRole, RoleCreateIngredient, RoleUpdateIngredient, RoleDeleteIngredient, RoleFindIngredients, RoleFindIngredient, RoleCreateDish, RoleUpdateDish, RoleDeleteDish, RoleFindDishes, RoleFindDish, RoleCreateDishVote, RoleUpdateDishVote, RoleDeleteDishVote, RoleFindDishVotes, RoleFindDishVote:
		return true
	}
	return false
}

func (e Role) String() string {
	return string(e)
}

func (e *Role) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = Role(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Role", str)
	}
	return nil
}

func (e Role) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

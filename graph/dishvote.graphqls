type DishVoteItem {
	slug: String!
	voteUser: [String]
	voteAnonymous: [String]
}

type DishVote {
	title: String
	description: String
	dishVoteItems: [DishVoteItem]!
	deleted: Boolean!
	deletedAt: Time
	deletedBy: String
	updatedAt: Time
	updatedBy: String
	createdAt: Time
	createdBy: String
	_id: ID!
}

input DishVoteItemInput {
	slug: String!
	voteUser: [String]
	voteAnonymous: [String]
}

input CreateDishVoteInput {
	title: String
	description: String
	dishVoteItems: [DishVoteItemInput]!
}

input UpdateDishVoteInput {
	_id: ID!
	title: String
	description: String
	dishVoteItems: [DishVoteItemInput]!
}

type DishVoteInsertOneResult {
	InsertedID: String
}

extend type Query {
	dishVotes(keyword: String, page: Int = 1, limit: Int = 10): [DishVote]! @hasRole(role: FIND_DISH_VOTES)
	dishVote(id: String!): DishVote @hasRole(role: FIND_DISH_VOTE)
}

extend type Mutation {
	createDishVote(createDishVoteInput: CreateDishVoteInput!): DishVoteInsertOneResult! @hasRole(role: CREATE_DISH_VOTE)
	updateDishVote(updateDishVoteInput: UpdateDishVoteInput!): DishVote! @hasRole(role: UPDATE_DISH_VOTE)
	removeDishVote(id: String!): DishVote! @hasRole(role: DELETE_DISH_VOTE)
}
